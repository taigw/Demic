[data]
# list of folders that contain images
data_root = [D:/Documents/data/JSRT/image]

# for preprocess
# (optioonal, int, 0-- disable, 1- use given mean and std, 
#   2-- use mean and std of the image or given mask)
intensity_normalize_mode = 2
# should not given when intensity_normalize_mode is 1
intensity_normalize_mean = 
intensity_normalize_std  = 


# list of image name postfix, each is seen as one modality
modality_postfix = 

with_ground_truth = False

# post fix of label files
label_postfix = 

# postfix of images
image_file_postfix = png

label_file_postfix = 

# an optional .txt file containing the filenames in data_root
data_names = config/test_names.txt

# only data_subset images loaded, all images if data_num is None
data_subset = 

crop_with_bounding_box = False

# folder to save the results
save_root = D:/Documents/data/JSRT/result

# output_postfix
output_postfix = seg

outputfile_postfix = png

# two lists of label convert, each label in label_convert_source is converted
# to the corresponding one in label_convert_target
#label_convert_source = [1]
#label_convert_target = [2]

# test agument
test_augment = False

[network]
# type and name of network
net_type = UNet2D
net_name = unet

# input patch shape e.g, [D, H, W, C] and label shape
data_shape = [1, 256, 256, 1]
label_shape = [1, 256, 256, 1]
class_num = 2
bn_training_mode = False

# model_file
model_file = D:/Documents/data/JSRT/model/unet_2000.ckpt

[network_parameter]
dropout = 1.0

[testing]

batch_size = 1

resize_input = False
resize_input_to_integer = 
resize_input_to_given_shape_in_2d = 
resize_input_to_given_shape_in_3d = 
use_depth_as_batch_size = 
